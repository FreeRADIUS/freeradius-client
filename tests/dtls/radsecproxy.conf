# Master config file, must be in /etc/radsecproxy or specified with -c option
#	All possible config options are listed below

# First you may define any global options, these are:
#
# You can optionally specify addresses and ports to listen on
# Multiple statements can be used for multiple ports/addresses
ListenDTLS		*:2084
#ListenUDP		localhost
#ListenTCP		[2001:700:1:7:215:f2ff:fe35:307d]:1812
#ListenTLS		10.10.10.10:2084
#ListenTLS		[2001:700:1:7:215:f2ff:fe35:307d]:2084
#ListenDTLS		[2001:700:1:7:215:f2ff:fe35:307d]:2084

# To specify a certain address/port for UDP/TLS requests you can use e.g.
#SourceUDP		127.0.0.1:33000
#SourceTCP		*:33000
#SourceTLS		*:33001
#SourceDTLS		*:33001

# Optional log level. 3 is default, 1 is less, 5 is more
#LogLevel		3
# Optional LogDestination, else stderr used for logging
# Logging to file
#LogDestination		file:///tmp/rp.log
# Or logging with Syslog. LOG_DAEMON used if facility not specified
# The supported facilities are LOG_DAEMON, LOG_MAIL, LOG_USER and
# LOG_LOCAL0, ..., LOG_LOCAL7
#LogDestination         x-syslog:///
#LogDestination         x-syslog:///log_local2

# For generating log entries conforming to the F-Ticks system, specify
# FTicksReporting with one of the following values.
#   None  -- Do not log in F-Ticks format.  This is the default.
#   Basic -- Do log in F-Ticks format but do not log VISINST.
#   Full  -- Do log in F-Ticks format and do log VISINST.
# Please note that in order to get F-Ticks logging for a given client,
# its matching client configuration block has to contain the
# fticksVISCOUNTRY option.

# You can optionally specify FTicksMAC in order to determine if and
# how Calling-Station-Id (users Ethernet MAC address) is being logged.
#   Static          -- Use a static string as a placeholder for
#                      Calling-Station-Id.
#   Original        -- Log Calling-Station-Id as-is.
#   VendorHashed    -- Keep first three segments as-is, hash the rest.
#   VendorKeyHashed -- Like VendorHashed but salt with F-Ticks-Key.    This
#   		       is the default.
#   FullyHashed     -- Hash the entire string.
#   FullyKeyHashed  -- Like FullyHashed but salt with F-Ticks-Key.

# In order to use FTicksMAC with one of VendorKeyHashed or
# FullyKeyHashed, specify a key with FTicksKey.
# FTicksKey <key>

# Default F-Ticks configuration:
#FTicksReporting None
#FTicksMAC Static

# You can optionally specify FTicksSyslogFacility to use a dedicated 
# syslog facility for F-Ticks messages. This allows for easier filtering
# of F-Ticks messages.
# F-Ticks messages are always logged using the log level LOG_DEBUG.
# Note that specifying a file (using the file:/// prefix) is not supported.
#FTicksSyslogFacility	log_local1
#FTicksSyslogFacility	x-syslog:///log_local1 

# There is an option for doing some simple loop prevention.  Note that
# the LoopPrevention directive can be used in server blocks too,
# overriding what's set here in the basic settings.
#LoopPrevention		on
# Add TTL attribute with value 20 if not present (prevents endless loops)
#AddTTL 20

# If we have TLS clients or servers we must define at least one tls block.
# You can name them whatever you like and then reference them by name when
# specifying clients or servers later. There are however three special names
# "default", "defaultclient" and "defaultserver". If no name is defined for
# a client, the "defaultclient" block will be used if it exists, if not the
# "default" will be used. For a server, "defaultserver" followed by "default"
# will be checked.
#
# The simplest configuration you can do is:
tls default {
    # You must specify at least one of CACertificateFile or CACertificatePath
    # for TLS to work. We always verify peer certificate (client and server)
    # CACertificateFile    /etc/cacerts/CA.pem
    CACertificateFile	ca.pem

    # You must specify the below for TLS, we always present our certificate
    CertificateFile	cert-rsa.pem
    CertificateKeyFile	key-rsa.pem
    # Optionally specify password if key is encrypted (not very secure)
    #CertificateKeyPassword	"follow the white rabbit"
    # Optionally enable CRL checking
    # CRLCheck on
    # Optionally specify how long CAs and CRLs are cached, default forever
    # CacheExpiry 3600
    # Optionally require that peer certs have one of the specified policyOIDs
    # policyoid     1.2.3 # this option can be used multiple times
    # policyoid     1.3.4
}

client 127.0.0.1 {
	type	dtls
	secret	radius/dtls
}

server 127.0.0.1 {
	type	UDP
	secret	testing123
}

realm * {
	server	127.0.0.1
}
